# Makefile.in generated by automake 1.11 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = jellyfish$(EXEEXT)
check_PROGRAMS = generate_sequence$(EXEEXT) \
	test_double_fifo_input$(EXEEXT) test_read_parser$(EXEEXT)
subdir = jellyfish
DIST_COMMON = $(library_include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(library_includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libjellyfish_la_LIBADD =
am_libjellyfish_la_OBJECTS = libjellyfish_la-square_binary_matrix.lo \
	libjellyfish_la-err.lo libjellyfish_la-misc.lo \
	libjellyfish_la-storage.lo libjellyfish_la-thread_exec.lo \
	libjellyfish_la-time.lo libjellyfish_la-file_parser.lo \
	libjellyfish_la-read_parser.lo libjellyfish_la-parse_read.lo \
	libjellyfish_la-half.lo libjellyfish_la-mapped_file.lo \
	libjellyfish_la-parse_dna.lo libjellyfish_la-parse_quake.lo \
	libjellyfish_la-parse_qual_dna.lo \
	libjellyfish_la-sequence_parser.lo \
	libjellyfish_la-seq_qual_parser.lo \
	libjellyfish_la-backtrace.lo libjellyfish_la-floats.lo \
	libjellyfish_la-dbg.lo libjellyfish_la-allocators_mmap.lo
libjellyfish_la_OBJECTS = $(am_libjellyfish_la_OBJECTS)
libjellyfish_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libjellyfish_la_LDFLAGS) $(LDFLAGS) -o $@
PROGRAMS = $(bin_PROGRAMS)
am_generate_sequence_OBJECTS = generate_sequence.$(OBJEXT) \
	generate_sequence_cmdline.$(OBJEXT) misc.$(OBJEXT) \
	mersenne.$(OBJEXT) square_binary_matrix.$(OBJEXT) \
	backtrace.$(OBJEXT) dbg.$(OBJEXT) time.$(OBJEXT)
generate_sequence_OBJECTS = $(am_generate_sequence_OBJECTS)
generate_sequence_LDADD = $(LDADD)
am_jellyfish_OBJECTS = jellyfish.$(OBJEXT) stats_main.$(OBJEXT) \
	hash_merge.$(OBJEXT) storage.$(OBJEXT) misc.$(OBJEXT) \
	err.$(OBJEXT) mer_counter.$(OBJEXT) histo_main.$(OBJEXT) \
	dump_main.$(OBJEXT) time.$(OBJEXT) thread_exec.$(OBJEXT) \
	query_main.$(OBJEXT) square_binary_matrix.$(OBJEXT) \
	dump_fastq_main.$(OBJEXT) histo_fastq_main.$(OBJEXT) \
	cite.$(OBJEXT) parse_dna.$(OBJEXT) file_parser.$(OBJEXT) \
	parse_quake.$(OBJEXT) parse_qual_dna.$(OBJEXT) \
	sequence_parser.$(OBJEXT) seq_qual_parser.$(OBJEXT) \
	half.$(OBJEXT) hash_fastq_merge.$(OBJEXT) \
	cite_cmdline.$(OBJEXT) query_cmdline.$(OBJEXT) \
	hash_merge_cmdline.$(OBJEXT) histo_cmdline.$(OBJEXT) \
	stats_cmdline.$(OBJEXT) histo_fastq_main_cmdline.$(OBJEXT) \
	mer_counter_cmdline.$(OBJEXT) \
	dump_fastq_main_cmdline.$(OBJEXT) \
	hash_fastq_merge_cmdline.$(OBJEXT) dump_cmdline.$(OBJEXT) \
	dbg.$(OBJEXT) mapped_file.$(OBJEXT) backtrace.$(OBJEXT) \
	floats.$(OBJEXT) allocators_mmap.$(OBJEXT)
jellyfish_OBJECTS = $(am_jellyfish_OBJECTS)
jellyfish_LDADD = $(LDADD)
am_test_double_fifo_input_OBJECTS = test_double_fifo_input.$(OBJEXT) \
	parse_dna.$(OBJEXT) file_parser.$(OBJEXT) \
	sequence_parser.$(OBJEXT) backtrace.$(OBJEXT) \
	thread_exec.$(OBJEXT) dbg.$(OBJEXT) time.$(OBJEXT) \
	allocators_mmap.$(OBJEXT)
test_double_fifo_input_OBJECTS = $(am_test_double_fifo_input_OBJECTS)
test_double_fifo_input_LDADD = $(LDADD)
am_test_read_parser_OBJECTS = test_read_parser.$(OBJEXT) \
	file_parser.$(OBJEXT) read_parser.$(OBJEXT) \
	parse_read.$(OBJEXT) dbg.$(OBJEXT) backtrace.$(OBJEXT) \
	time.$(OBJEXT)
test_read_parser_OBJECTS = $(am_test_read_parser_OBJECTS)
test_read_parser_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libjellyfish_la_SOURCES) $(generate_sequence_SOURCES) \
	$(jellyfish_SOURCES) $(test_double_fifo_input_SOURCES) \
	$(test_read_parser_SOURCES)
DIST_SOURCES = $(libjellyfish_la_SOURCES) $(generate_sequence_SOURCES) \
	$(jellyfish_SOURCES) $(test_double_fifo_input_SOURCES) \
	$(test_read_parser_SOURCES)
HEADERS = $(library_include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MD5 = @MD5@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_LDFLAGS = -lpthread
AM_CPPFLAGS = -Wall -Werror -Wnon-virtual-dtor -I$(top_srcdir)
AM_CXXFLAGS = -g -O3
jellyfish_SOURCES = jellyfish.cc stats_main.cc hash_merge.cc		\
storage.cc misc.cc err.cc mer_counter.cc histo_main.cc dump_main.cc	\
time.cc thread_exec.cc query_main.cc square_binary_matrix.cc		\
dump_fastq_main.cc histo_fastq_main.cc cite.cc parse_dna.cc		\
file_parser.cc parse_quake.cc parse_qual_dna.cc sequence_parser.cc	\
seq_qual_parser.cc half.cpp hash_fastq_merge.cc cite_cmdline.cc		\
query_cmdline.cc hash_merge_cmdline.cc histo_cmdline.cc			\
stats_cmdline.cc histo_fastq_main_cmdline.cc mer_counter_cmdline.cc	\
dump_fastq_main_cmdline.cc hash_fastq_merge_cmdline.cc dump_cmdline.cc	\
dbg.cc mapped_file.cc backtrace.cc floats.cc allocators_mmap.cc

EXTRA_DIST = cite_cmdline.hpp query_cmdline.hpp hash_merge_cmdline.hpp \
	histo_cmdline.hpp stats_cmdline.hpp \
	histo_fastq_main_cmdline.hpp dump_fastq_main_cmdline.hpp \
	mer_counter_cmdline.hpp hash_fastq_merge_cmdline.hpp \
	dump_cmdline.hpp double_fifo_input.hpp \
	simple_growing_array.hpp backtrace.hpp noop_dumper.hpp \
	randomc.h generate_sequence_cmdline.hpp
lib_LTLIBRARIES = libjellyfish.la
libjellyfish_la_LDFLAGS = -version-info 1:0:0
libjellyfish_la_SOURCES = square_binary_matrix.cc err.cc misc.cc	\
dbg.hpp storage.cc thread_exec.cc time.cc file_parser.cc		\
read_parser.cc parse_read.cc half.cpp mapped_file.cc parse_dna.cc	\
parse_quake.cc parse_qual_dna.cc sequence_parser.cc seq_qual_parser.cc	\
backtrace.cc floats.cc dbg.cc allocators_mmap.cc

libjellyfish_la_CPPFLAGS = $(AM_CPPFLAGS)
library_includedir = $(includedir)/jellyfish-@PACKAGE_VERSION@/jellyfish
library_include_HEADERS = allocators_malloc.hpp allocators_mmap.hpp	\
allocators_shm.hpp atomic_gcc.hpp compacted_dumper.hpp			\
compacted_hash.hpp concurrent_queues.hpp direct_indexing_array.hpp	\
direct_sorted_dumper.hpp divisor.hpp dumper.hpp hash_function.hpp	\
hash.hpp heap.hpp invertible_hash_array.hpp locking_hash_counters.hpp	\
locks_pthread.hpp mapped_file.hpp mer_counting.hpp err.hpp misc.hpp	\
offsets_key_value.hpp reversible_hash_function.hpp sorted_dumper.hpp	\
square_binary_matrix.hpp storage.hpp thread_exec.hpp time.hpp		\
token_ring.hpp raw_dumper.hpp capped_integer.hpp			\
aligned_values_array.hpp fastq_dumper.hpp floats.hpp			\
circular_buffer.hpp counter.hpp parse_quake.hpp parse_dna.hpp		\
parse_qual_dna.hpp file_parser.hpp sequence_parser.hpp			\
seq_qual_parser.hpp double_fifo_input.hpp read_parser.hpp		\
parse_read.hpp simple_growing_array.hpp toFloat.h eLut.h dbg.hpp	\
half.h backtrace.hpp

generate_sequence_SOURCES = generate_sequence.cc	\
generate_sequence_cmdline.cc misc.cc mersenne.cpp	\
square_binary_matrix.cc backtrace.cc dbg.cc time.cc

# generate_reads_SOURCES = generate_reads.cc generate_reads_cmdline.cc	\
# mersenne.cpp dbg.cc
test_double_fifo_input_SOURCES = test_double_fifo_input.cc	\
parse_dna.cc file_parser.cc sequence_parser.cc backtrace.cc	\
thread_exec.cc dbg.cc time.cc allocators_mmap.cc

test_read_parser_SOURCES = test_read_parser.cc file_parser.cc	\
read_parser.cc parse_read.cc dbg.cc backtrace.cc time.cc

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign jellyfish/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign jellyfish/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libjellyfish.la: $(libjellyfish_la_OBJECTS) $(libjellyfish_la_DEPENDENCIES) 
	$(libjellyfish_la_LINK) -rpath $(libdir) $(libjellyfish_la_OBJECTS) $(libjellyfish_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
generate_sequence$(EXEEXT): $(generate_sequence_OBJECTS) $(generate_sequence_DEPENDENCIES) 
	@rm -f generate_sequence$(EXEEXT)
	$(CXXLINK) $(generate_sequence_OBJECTS) $(generate_sequence_LDADD) $(LIBS)
jellyfish$(EXEEXT): $(jellyfish_OBJECTS) $(jellyfish_DEPENDENCIES) 
	@rm -f jellyfish$(EXEEXT)
	$(CXXLINK) $(jellyfish_OBJECTS) $(jellyfish_LDADD) $(LIBS)
test_double_fifo_input$(EXEEXT): $(test_double_fifo_input_OBJECTS) $(test_double_fifo_input_DEPENDENCIES) 
	@rm -f test_double_fifo_input$(EXEEXT)
	$(CXXLINK) $(test_double_fifo_input_OBJECTS) $(test_double_fifo_input_LDADD) $(LIBS)
test_read_parser$(EXEEXT): $(test_read_parser_OBJECTS) $(test_read_parser_DEPENDENCIES) 
	@rm -f test_read_parser$(EXEEXT)
	$(CXXLINK) $(test_read_parser_OBJECTS) $(test_read_parser_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/allocators_mmap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/backtrace.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cite.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cite_cmdline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dbg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dump_cmdline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dump_fastq_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dump_fastq_main_cmdline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dump_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/err.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/floats.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/generate_sequence.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/generate_sequence_cmdline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/half.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hash_fastq_merge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hash_fastq_merge_cmdline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hash_merge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hash_merge_cmdline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/histo_cmdline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/histo_fastq_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/histo_fastq_main_cmdline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/histo_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jellyfish.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjellyfish_la-allocators_mmap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjellyfish_la-backtrace.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjellyfish_la-dbg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjellyfish_la-err.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjellyfish_la-file_parser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjellyfish_la-floats.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjellyfish_la-half.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjellyfish_la-mapped_file.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjellyfish_la-misc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjellyfish_la-parse_dna.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjellyfish_la-parse_quake.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjellyfish_la-parse_qual_dna.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjellyfish_la-parse_read.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjellyfish_la-read_parser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjellyfish_la-seq_qual_parser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjellyfish_la-sequence_parser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjellyfish_la-square_binary_matrix.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjellyfish_la-storage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjellyfish_la-thread_exec.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjellyfish_la-time.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mapped_file.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mer_counter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mer_counter_cmdline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mersenne.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/misc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parse_dna.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parse_quake.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parse_qual_dna.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parse_read.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/query_cmdline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/query_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/read_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seq_qual_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sequence_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/square_binary_matrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stats_cmdline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stats_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_double_fifo_input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_read_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread_exec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/time.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

libjellyfish_la-square_binary_matrix.lo: square_binary_matrix.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libjellyfish_la-square_binary_matrix.lo -MD -MP -MF $(DEPDIR)/libjellyfish_la-square_binary_matrix.Tpo -c -o libjellyfish_la-square_binary_matrix.lo `test -f 'square_binary_matrix.cc' || echo '$(srcdir)/'`square_binary_matrix.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libjellyfish_la-square_binary_matrix.Tpo $(DEPDIR)/libjellyfish_la-square_binary_matrix.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='square_binary_matrix.cc' object='libjellyfish_la-square_binary_matrix.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libjellyfish_la-square_binary_matrix.lo `test -f 'square_binary_matrix.cc' || echo '$(srcdir)/'`square_binary_matrix.cc

libjellyfish_la-err.lo: err.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libjellyfish_la-err.lo -MD -MP -MF $(DEPDIR)/libjellyfish_la-err.Tpo -c -o libjellyfish_la-err.lo `test -f 'err.cc' || echo '$(srcdir)/'`err.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libjellyfish_la-err.Tpo $(DEPDIR)/libjellyfish_la-err.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='err.cc' object='libjellyfish_la-err.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libjellyfish_la-err.lo `test -f 'err.cc' || echo '$(srcdir)/'`err.cc

libjellyfish_la-misc.lo: misc.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libjellyfish_la-misc.lo -MD -MP -MF $(DEPDIR)/libjellyfish_la-misc.Tpo -c -o libjellyfish_la-misc.lo `test -f 'misc.cc' || echo '$(srcdir)/'`misc.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libjellyfish_la-misc.Tpo $(DEPDIR)/libjellyfish_la-misc.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='misc.cc' object='libjellyfish_la-misc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libjellyfish_la-misc.lo `test -f 'misc.cc' || echo '$(srcdir)/'`misc.cc

libjellyfish_la-storage.lo: storage.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libjellyfish_la-storage.lo -MD -MP -MF $(DEPDIR)/libjellyfish_la-storage.Tpo -c -o libjellyfish_la-storage.lo `test -f 'storage.cc' || echo '$(srcdir)/'`storage.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libjellyfish_la-storage.Tpo $(DEPDIR)/libjellyfish_la-storage.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='storage.cc' object='libjellyfish_la-storage.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libjellyfish_la-storage.lo `test -f 'storage.cc' || echo '$(srcdir)/'`storage.cc

libjellyfish_la-thread_exec.lo: thread_exec.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libjellyfish_la-thread_exec.lo -MD -MP -MF $(DEPDIR)/libjellyfish_la-thread_exec.Tpo -c -o libjellyfish_la-thread_exec.lo `test -f 'thread_exec.cc' || echo '$(srcdir)/'`thread_exec.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libjellyfish_la-thread_exec.Tpo $(DEPDIR)/libjellyfish_la-thread_exec.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='thread_exec.cc' object='libjellyfish_la-thread_exec.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libjellyfish_la-thread_exec.lo `test -f 'thread_exec.cc' || echo '$(srcdir)/'`thread_exec.cc

libjellyfish_la-time.lo: time.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libjellyfish_la-time.lo -MD -MP -MF $(DEPDIR)/libjellyfish_la-time.Tpo -c -o libjellyfish_la-time.lo `test -f 'time.cc' || echo '$(srcdir)/'`time.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libjellyfish_la-time.Tpo $(DEPDIR)/libjellyfish_la-time.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='time.cc' object='libjellyfish_la-time.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libjellyfish_la-time.lo `test -f 'time.cc' || echo '$(srcdir)/'`time.cc

libjellyfish_la-file_parser.lo: file_parser.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libjellyfish_la-file_parser.lo -MD -MP -MF $(DEPDIR)/libjellyfish_la-file_parser.Tpo -c -o libjellyfish_la-file_parser.lo `test -f 'file_parser.cc' || echo '$(srcdir)/'`file_parser.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libjellyfish_la-file_parser.Tpo $(DEPDIR)/libjellyfish_la-file_parser.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='file_parser.cc' object='libjellyfish_la-file_parser.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libjellyfish_la-file_parser.lo `test -f 'file_parser.cc' || echo '$(srcdir)/'`file_parser.cc

libjellyfish_la-read_parser.lo: read_parser.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libjellyfish_la-read_parser.lo -MD -MP -MF $(DEPDIR)/libjellyfish_la-read_parser.Tpo -c -o libjellyfish_la-read_parser.lo `test -f 'read_parser.cc' || echo '$(srcdir)/'`read_parser.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libjellyfish_la-read_parser.Tpo $(DEPDIR)/libjellyfish_la-read_parser.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='read_parser.cc' object='libjellyfish_la-read_parser.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libjellyfish_la-read_parser.lo `test -f 'read_parser.cc' || echo '$(srcdir)/'`read_parser.cc

libjellyfish_la-parse_read.lo: parse_read.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libjellyfish_la-parse_read.lo -MD -MP -MF $(DEPDIR)/libjellyfish_la-parse_read.Tpo -c -o libjellyfish_la-parse_read.lo `test -f 'parse_read.cc' || echo '$(srcdir)/'`parse_read.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libjellyfish_la-parse_read.Tpo $(DEPDIR)/libjellyfish_la-parse_read.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parse_read.cc' object='libjellyfish_la-parse_read.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libjellyfish_la-parse_read.lo `test -f 'parse_read.cc' || echo '$(srcdir)/'`parse_read.cc

libjellyfish_la-half.lo: half.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libjellyfish_la-half.lo -MD -MP -MF $(DEPDIR)/libjellyfish_la-half.Tpo -c -o libjellyfish_la-half.lo `test -f 'half.cpp' || echo '$(srcdir)/'`half.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libjellyfish_la-half.Tpo $(DEPDIR)/libjellyfish_la-half.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='half.cpp' object='libjellyfish_la-half.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libjellyfish_la-half.lo `test -f 'half.cpp' || echo '$(srcdir)/'`half.cpp

libjellyfish_la-mapped_file.lo: mapped_file.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libjellyfish_la-mapped_file.lo -MD -MP -MF $(DEPDIR)/libjellyfish_la-mapped_file.Tpo -c -o libjellyfish_la-mapped_file.lo `test -f 'mapped_file.cc' || echo '$(srcdir)/'`mapped_file.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libjellyfish_la-mapped_file.Tpo $(DEPDIR)/libjellyfish_la-mapped_file.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mapped_file.cc' object='libjellyfish_la-mapped_file.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libjellyfish_la-mapped_file.lo `test -f 'mapped_file.cc' || echo '$(srcdir)/'`mapped_file.cc

libjellyfish_la-parse_dna.lo: parse_dna.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libjellyfish_la-parse_dna.lo -MD -MP -MF $(DEPDIR)/libjellyfish_la-parse_dna.Tpo -c -o libjellyfish_la-parse_dna.lo `test -f 'parse_dna.cc' || echo '$(srcdir)/'`parse_dna.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libjellyfish_la-parse_dna.Tpo $(DEPDIR)/libjellyfish_la-parse_dna.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parse_dna.cc' object='libjellyfish_la-parse_dna.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libjellyfish_la-parse_dna.lo `test -f 'parse_dna.cc' || echo '$(srcdir)/'`parse_dna.cc

libjellyfish_la-parse_quake.lo: parse_quake.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libjellyfish_la-parse_quake.lo -MD -MP -MF $(DEPDIR)/libjellyfish_la-parse_quake.Tpo -c -o libjellyfish_la-parse_quake.lo `test -f 'parse_quake.cc' || echo '$(srcdir)/'`parse_quake.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libjellyfish_la-parse_quake.Tpo $(DEPDIR)/libjellyfish_la-parse_quake.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parse_quake.cc' object='libjellyfish_la-parse_quake.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libjellyfish_la-parse_quake.lo `test -f 'parse_quake.cc' || echo '$(srcdir)/'`parse_quake.cc

libjellyfish_la-parse_qual_dna.lo: parse_qual_dna.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libjellyfish_la-parse_qual_dna.lo -MD -MP -MF $(DEPDIR)/libjellyfish_la-parse_qual_dna.Tpo -c -o libjellyfish_la-parse_qual_dna.lo `test -f 'parse_qual_dna.cc' || echo '$(srcdir)/'`parse_qual_dna.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libjellyfish_la-parse_qual_dna.Tpo $(DEPDIR)/libjellyfish_la-parse_qual_dna.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parse_qual_dna.cc' object='libjellyfish_la-parse_qual_dna.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libjellyfish_la-parse_qual_dna.lo `test -f 'parse_qual_dna.cc' || echo '$(srcdir)/'`parse_qual_dna.cc

libjellyfish_la-sequence_parser.lo: sequence_parser.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libjellyfish_la-sequence_parser.lo -MD -MP -MF $(DEPDIR)/libjellyfish_la-sequence_parser.Tpo -c -o libjellyfish_la-sequence_parser.lo `test -f 'sequence_parser.cc' || echo '$(srcdir)/'`sequence_parser.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libjellyfish_la-sequence_parser.Tpo $(DEPDIR)/libjellyfish_la-sequence_parser.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='sequence_parser.cc' object='libjellyfish_la-sequence_parser.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libjellyfish_la-sequence_parser.lo `test -f 'sequence_parser.cc' || echo '$(srcdir)/'`sequence_parser.cc

libjellyfish_la-seq_qual_parser.lo: seq_qual_parser.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libjellyfish_la-seq_qual_parser.lo -MD -MP -MF $(DEPDIR)/libjellyfish_la-seq_qual_parser.Tpo -c -o libjellyfish_la-seq_qual_parser.lo `test -f 'seq_qual_parser.cc' || echo '$(srcdir)/'`seq_qual_parser.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libjellyfish_la-seq_qual_parser.Tpo $(DEPDIR)/libjellyfish_la-seq_qual_parser.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='seq_qual_parser.cc' object='libjellyfish_la-seq_qual_parser.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libjellyfish_la-seq_qual_parser.lo `test -f 'seq_qual_parser.cc' || echo '$(srcdir)/'`seq_qual_parser.cc

libjellyfish_la-backtrace.lo: backtrace.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libjellyfish_la-backtrace.lo -MD -MP -MF $(DEPDIR)/libjellyfish_la-backtrace.Tpo -c -o libjellyfish_la-backtrace.lo `test -f 'backtrace.cc' || echo '$(srcdir)/'`backtrace.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libjellyfish_la-backtrace.Tpo $(DEPDIR)/libjellyfish_la-backtrace.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='backtrace.cc' object='libjellyfish_la-backtrace.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libjellyfish_la-backtrace.lo `test -f 'backtrace.cc' || echo '$(srcdir)/'`backtrace.cc

libjellyfish_la-floats.lo: floats.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libjellyfish_la-floats.lo -MD -MP -MF $(DEPDIR)/libjellyfish_la-floats.Tpo -c -o libjellyfish_la-floats.lo `test -f 'floats.cc' || echo '$(srcdir)/'`floats.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libjellyfish_la-floats.Tpo $(DEPDIR)/libjellyfish_la-floats.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='floats.cc' object='libjellyfish_la-floats.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libjellyfish_la-floats.lo `test -f 'floats.cc' || echo '$(srcdir)/'`floats.cc

libjellyfish_la-dbg.lo: dbg.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libjellyfish_la-dbg.lo -MD -MP -MF $(DEPDIR)/libjellyfish_la-dbg.Tpo -c -o libjellyfish_la-dbg.lo `test -f 'dbg.cc' || echo '$(srcdir)/'`dbg.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libjellyfish_la-dbg.Tpo $(DEPDIR)/libjellyfish_la-dbg.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dbg.cc' object='libjellyfish_la-dbg.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libjellyfish_la-dbg.lo `test -f 'dbg.cc' || echo '$(srcdir)/'`dbg.cc

libjellyfish_la-allocators_mmap.lo: allocators_mmap.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libjellyfish_la-allocators_mmap.lo -MD -MP -MF $(DEPDIR)/libjellyfish_la-allocators_mmap.Tpo -c -o libjellyfish_la-allocators_mmap.lo `test -f 'allocators_mmap.cc' || echo '$(srcdir)/'`allocators_mmap.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libjellyfish_la-allocators_mmap.Tpo $(DEPDIR)/libjellyfish_la-allocators_mmap.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='allocators_mmap.cc' object='libjellyfish_la-allocators_mmap.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libjellyfish_la-allocators_mmap.lo `test -f 'allocators_mmap.cc' || echo '$(srcdir)/'`allocators_mmap.cc

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-library_includeHEADERS: $(library_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(library_includedir)" || $(MKDIR_P) "$(DESTDIR)$(library_includedir)"
	@list='$(library_include_HEADERS)'; test -n "$(library_includedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(library_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(library_includedir)" || exit $$?; \
	done

uninstall-library_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(library_include_HEADERS)'; test -n "$(library_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(library_includedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(library_includedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(library_includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-library_includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-library_includeHEADERS

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-library_includeHEADERS \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-library_includeHEADERS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
