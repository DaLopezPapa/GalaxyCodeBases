#!/usr/bin/env perl
use strict;
use warnings;
use Data::Dump qw(ddx);

use FindBin qw($RealBin);
if ($FindBin::VERSION < 1.51) {
	warn "[!]Your Perl is too old, thus there can only be ONE `bsuit` file in your PATH. [FindBin Version: $FindBin::VERSION < 1.51]\n\n"
}
FindBin::again();
use lib "$RealBin/lib";
require BSuitLib;
use Galaxy::IO::INI;

my %Cmd2Fun = (
	'prepare' => \&do_pre,
	'grep' => \&do_grep,
	'analyse' => \&do_analyse,
);

sub ShowHelp() {
	die '[!]Available Commands are: [',join('],[',sort keys %Cmd2Fun),"], case insensitive.\n";
}
my $ShowHelp=0;
if (@ARGV < 2) {
	warn "Usage: $0 <command> Human=hg19.fa,Virus=hbv.fa,bam=Sorted.bam,out=./test/\n";
	ShowHelp();
}
my $cmd=lc shift;
my $cfgdat=shift;
#die "[!]Config File [$cfgfile] NOT found !\n" unless -f $cfgfile;
my %CFG = (
	human => '',
	virus => '',
	bam => '',
	out => './test'
);
for ( split /\,/,$cfgdat ) {
	my ($id,$val) = split /=/,$_;
	$id = lc $id;
	next unless exists $CFG{$id};
	$CFG{$id} = $val;
}
die "[!]Bam File [$CFG{'bam'}] NOT found !\n" unless -f $CFG{'bam'};
my $cfgfile = $CFG{'out'} . '/prj.ini';
my $thedir = $CFG{'out'} . 'Project1_aln';
unless (-d $thedir) {
	File::Path::make_path($thedir,{verbose => 0,mode => 0755});
}
link $CFG{'bam'},$thedir.'/Test.bam';

open O,'>',$cfgfile;
print O "
[RefFiles]
HostRef=$CFG{'human'}
VirusRef=$CFG{'virus'}

[DataFiles]
Test.1=xx_1.fq
Test.2=xx_2.fq

[InsertSizes]
Test=500
Test.SD=50

[Output]
WorkDir=$CFG{'out'}
ProjectID=Project1
";
close O;

our $DISABLE_REF_INDEX=1;

unless (exists $Cmd2Fun{$cmd}) {
	warn "[x]Unknown Command: [$cmd] !\n";
	ShowHelp();
}

#our $CFGminMAPQ = 30;
our $minHostDepth = 30;
our $minSoftClip = 10;
our $methly3BaseErrRate = 0.08;
our $DEVELOP = 1;
our $DEBUG = 1;

our $idbacmd = '--max_gap 100 --min_region 31 --min_contig 31 --mink 17 --maxk 89 --step 20';
our $PathPrefix = "PATH=\"$RealBin/bin:\$PATH\";";

our $Config = Galaxy::IO::INI->new();
$Config->read($cfgfile);
#ddx \$Config;

warn "[!]Runing $0 [$cmd].\n";



our $RootPath = $Config->{'Output'}->{'WorkDir'};
$RootPath =~ s/[\/\\]+$//g;
our $ProjectID = $Config->{'Output'}->{'ProjectID'};
warn "[!] Working on: [$ProjectID] @ [$RootPath]\n";

our $HostRefName = basename($Config->{'RefFiles'}->{'HostRef'});
our $VirusRefName = basename($Config->{'RefFiles'}->{'VirusRef'});
our $RefFilesSHA = getFilesHash($HostRefName,$VirusRefName);

our $RefConfig = Galaxy::IO::INI->new();
our (%RefChrIDs,%VirusChrIDs);

$Cmd2Fun{'prepare'}($cfgfile);

if ($cmd ne 'prepare') {
	if ( -f "$RootPath/Ref/Ref.ini" ) {
		$RefConfig->read("$RootPath/Ref/Ref.ini");
	} else {die "[x] Prepare INI not found ! [$RootPath/Ref/Ref.ini]\n";}
	my @RefChrID = split(',',$RefConfig->{$RefFilesSHA}->{'RefChrIDs'});
	my @VirusChrID = split(',',$RefConfig->{$RefFilesSHA}->{'VirusChrIDs'});
	for (@RefChrID) {
		$RefChrIDs{$_} = $RefConfig->{$RefFilesSHA}->{$_};
	}
	$VirusChrIDs{$_} = $RefConfig->{$RefFilesSHA}->{$_} for @VirusChrID;
}

$Cmd2Fun{$cmd}($cfgfile);	# If use `do $Cmd2Fun{$cmd}();`, the sub MUST return 1;
warn "[!]done !\n";

# overlap = (min(end_mate1,end_mate2) - max(start_mate1,start_mate2)) http://sourceforge.net/p/bio-bwa/mailman/message/27028596/
